#!/usr/bin/env ruby

require 'bundler/setup'

require 'gearman_admin_client'

require 'geary/manager'
require 'geary/worker'
require 'geary/configuration'

class TestWorker
  extend Geary::Worker

  def perform
  end
end

def main
  jobs = -> {
    admin = GearmanAdminClient.new('localhost:4730')

    begin
      admin.status.first.jobs_in_queue
    rescue Exception
      'unknown'
    ensure
      admin.disconnect
    end
  }

  concurrency = Integer(ENV['CONCURRENCY'] || 25)
  configuration = Geary::Configuration.new(concurrency: concurrency)
  manager = Geary::Manager.new(configuration: configuration)

  n = Integer(ENV['JOBS'] || 20_000)

  puts "> Seeding #{n} jobs."

  n.times { TestWorker.perform_async }

  puts "> Seeded #{jobs.()} jobs."

  if jobs.() != n
    message = [
      "Expected to measure overhead of #{n} jobs, would instead",
      "measure overhead of #{jobs.()} jobs."
    ]

    puts message.join(' ')
  end

  start = Time.now
  stop = Time.now
  stop_candidate = Time.now

  puts "> Starting Manager"

  manager.async.start

  loop do
    stop_candidate = Time.now
    sleep 5

    jobs_left = jobs.()

    if jobs_left == 0
      stop = Time.now
      break
    else
      elapsed = Time.now.to_f - start.to_f
      puts "> #{jobs_left} jobs left. #{elapsed.round(2)} seconds elapsed"
    end
  end

  puts "Between #{stop_candidate.to_f - start.to_f} and #{stop.to_f - start.to_f}"
end

main
sleep

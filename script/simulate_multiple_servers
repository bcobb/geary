#!/usr/bin/env ruby

require 'bundler/setup'

require 'gearman_admin_client'

require 'geary/manager'
require 'geary/worker'

$addresses = ['gearman://localhost:4730', 'gearman://localhost:4731']

class TestWorker
  extend Geary::Worker

  use_gearman_client(*$addresses)

  def perform
  end
end

def main
  jobs = ->(address) {
    admin = GearmanAdminClient.new(address)

    begin
      admin.status.first.jobs_in_queue
    rescue Exception
      'unknown'
    ensure
      admin.disconnect
    end
  }

  concurrency = Integer(ENV['CONCURRENCY'] || 25)
  configuration = Geary::Configuration.new(
    concurrency: concurrency,
    server_addresses: $addresses
  )
  manager = Geary::Manager.new(configuration: configuration)

  n = Integer(ENV['JOBS'] || 20_000)

  puts "> Seeding #{n} jobs."

  n.times { TestWorker.perform_async }

  puts "> Seeded jobs."

  start = Time.now
  stop = Time.now
  stop_candidate = Time.now

  puts "> Starting Manager"

  manager.async.start

  loop do
    stop_candidate = Time.now
    sleep 5

    jobs_left = $addresses.map { |a| jobs.(a) }.reduce(&:+)

    if jobs_left == 0
      stop = Time.now
      break
    else
      elapsed = Time.now.to_f - start.to_f
      $addresses.each do |a|
        puts "> #{jobs.(a)} jobs left at #{a}. #{elapsed.round(2)} seconds elapsed."
      end
    end
  end

  puts "Between #{stop_candidate.to_f - start.to_f} and #{stop.to_f - start.to_f}"
end

main
sleep
